import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import { IBM_Plex_Sans_Thai } from 'next/font/google';
import './globals.css';
import { Toaster } from 'sonner';
import Navbar from '@/components/navbar';
import api from '@/server/api';
import { Subjects } from '@/types/subject.type';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const ibmPlex = IBM_Plex_Sans_Thai({
  subsets: ['thai'],
  weight: ['100', '200', '300', '400', '500', '600', '700'],
  display: 'swap',
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const response = await api.subject.getSubjects() as { data: { data: Subjects } };
  const subjects: Subjects = response.data.data ?? [];
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${ibmPlex.className} ${geistMono.variable} antialiased`}
      >
        <Navbar subjects={subjects} />
        {children}
        <Toaster />
      </body>
    </html>
  );
}
